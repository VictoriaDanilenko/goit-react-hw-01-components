{"version":3,"sources":["components/profile/styledProfile.js","components/profile/Profile.js","components/statistics/statistics-item/styledStatItem.js","components/statistics/statistics-item/StatItem.js","components/statistics/styledStatistics.js","components/statistics/Statistics.js","components/friendList/styledFriendList.js","components/friendList/friendItem/styledFriendListItem.js","components/friendList/friendItem/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/styledTransactionHistory.js","components/transactionHistory/TransactionHistory.js","data/index.js","components/App.js","index.js"],"names":["WrapperProfile","styled","section","Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","defaultProps","LiItem","li","StatItem","label","percentage","WrapperStatistics","Statistics","title","map","stat","key","id","WrapperFriendList","FriendListItem","status","isOnline","width","FriendList","friends","friend","WrapperTransactionHistory","TransactionHistory","items","item","type","amount","currency","data","user","statisticalData","transactions","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46a3c2d8.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst WrapperProfile = styled.section`\n  padding-top: 30px;\n  padding-bottom: 15px;\n  color: #6f6b6b;\n  text-align: center;\n  .profile {\n    margin: 0 auto;\n    width: 300px;\n    overflow: hidden;\n    background-color: #fff;\n    border-radius: 5px;\n    border: 1px solid #b295ba;\n    box-shadow: 4px 4px 9px 7px rgba(34, 60, 80, 0.2);\n    transition: transform 250ms linear, box-shadow 250ms linear;\n    &:hover {\n      transform: scale(1.03);\n      box-shadow: 4px 4px 15px 11px rgba(12, 105, 101, 0.27);\n    }\n  }\n  .description {\n    padding: 15px;\n  }\n  .avatar {\n    margin-left: auto;\n    margin-right: auto;\n    padding: 10px;\n    width: 250px;\n    margin-bottom: 15px;\n    border: 0.5px solid grey;\n    border-radius: 50%;\n  }\n  .name,\n  .tag {\n    margin-bottom: 10px;\n  }\n  .name {\n    color: #212121;\n    font-weight: 700;\n    font-size: 20px;\n  }\n  .stats {\n    display: flex;\n    justify-content: space-between;\n  }\n  .stats li {\n    padding: 15px 10px 20px;\n    width: calc(100% / 3);\n    background-color: #e2d7f8;\n    border-top: 1px solid #b295ba;\n    &:hover {\n      color: #702bad;\n    }\n  }\n  .stats li:not(:last-child) {\n    border-right: 1px solid #b295ba;\n  }\n  .label {\n    display: block;\n    margin-bottom: 10px;\n  }\n  .quantity {\n    display: block;\n    color: #212121;\n    font-weight: 700;\n    font-size: 14px;\n  }\n`;\n\nexport default WrapperProfile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WrapperProfile from './styledProfile';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <WrapperProfile>\n      <div className=\"profile\">\n        <div className=\"description\">\n          <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n          <p className=\"name\">{name}</p>\n          <p className=\"tag\">@{tag}</p>\n          <p className=\"location\">{location}</p>\n        </div>\n\n        <ul className=\"stats list\">\n          <li>\n            <span className=\"label\">Followers</span>\n            <span className=\"quantity\">{followers}</span>\n          </li>\n          <li>\n            <span className=\"label\">Views</span>\n            <span className=\"quantity\">{views}</span>\n          </li>\n          <li>\n            <span className=\"label\">Likes</span>\n            <span className=\"quantity\">{likes}</span>\n          </li>\n        </ul>\n      </div>\n    </WrapperProfile>\n  );\n};\n\nexport default Profile;\n\nProfile.defaultProps = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg ',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.objectOf(PropTypes.number),\n};","import styled from 'styled-components';\n\nconst LiItem = styled.li`\n  padding: 5px;\n  width: calc(100% / 5);\n  background-color: #e2d7f8;\n  transition: box-shadow 200ms linear;\n  &:hover {\n    box-shadow: 4px 4px 9px 7px rgba(34, 60, 80, 0.3);\n  }\n  .label,\n  .percentage {\n    display: block;\n    padding: 10px;\n  }\n  .label {\n    font-size: 14px;\n  }\n  .percentage {\n    font-weight: 700;\n    font-size: 18px;\n  }\n`;\nexport default LiItem;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LiItem from './styledStatItem';\n\nconst StatItem = ({ label, percentage }) => {\n  return (\n    <LiItem className=\"item\">\n      <span className=\"label\">{label}</span>\n      <span className=\"percentage\">{percentage}%</span>\n    </LiItem>\n  );\n};\n\nexport default StatItem;\n\nStatItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};","import styled from 'styled-components';\n\nconst WrapperStatistics = styled.section`\n  padding-top: 30px;\n  .statistics {\n    display: block;\n    width: 300px;\n    margin: 0 auto;\n    background-color: #ffffff;\n    border: 1px solid #b295ba;\n    border-radius: 5px;\n  }\n  .stat-list {\n    display: flex;\n  }\n  .title {\n    padding: 15px;\n    font-size: 20px;\n    text-align: center;\n    text-transform: uppercase;\n  }\n`;\nexport default WrapperStatistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatItem from './statistics-item/StatItem';\nimport WrapperStatistics from './styledStatistics';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <WrapperStatistics>\n      <div className=\"statistics\">\n        {title && <h2 className=\"title\">{title}</h2>}\n        <ul className=\"stat-list list\">\n          {stats.map(stat => (\n            <StatItem {...stat} key={stat.id} />\n          ))}\n        </ul>\n      </div>\n    </WrapperStatistics>\n  );\n};\nexport default Statistics;\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.object),\n};","import styled from 'styled-components';\n\nconst WrapperFriendList = styled.section`\n  padding-top: 30px;\n  padding-bottom: 15px;\n  .friend-list {\n    margin: 0 auto;\n    width: 300px;\n  }\n  .item:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport default WrapperFriendList;","import styled from 'styled-components';\n\nconst LiItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px 15px;\n  color: #212121;\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 4px 4px 9px 7px rgba(34, 60, 80, 0.2);\n  transition: transform 200ms linear, box-shadow 200ms linear;\n  &:hover {\n    transform: scale(1.03);\n    box-shadow: 4px 3px 12px 6px rgba(19, 152, 134, 0.3);\n  }\n  .status {\n    margin-right: 10px;\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;\n    &.online {\n      background-color: #4fcd4f;\n    }\n    &.offline {\n      background-color: #ec6262;\n    }\n  }\n  .avatar {\n    margin-right: 20px;\n    padding: 5px;\n    border: 1px solid grey;\n    border-radius: 50%;\n  }\n  .name {\n    font-size: 20px;\n    font-weight: 700;\n  }\n`;\nexport default LiItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LiItem from './styledFriendListItem';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  const status = isOnline ? 'status online' : 'status offline';\n\n  return (\n    <LiItem className=\"item\">\n      <span className={status}></span>\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </LiItem>\n  );\n};\nexport default FriendListItem;\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WrapperFriendList from './styledFriendList';\nimport FriendListItem from './friendItem/FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <WrapperFriendList>\n      <ul className=\"friend-list\">\n        {friends.map(friend => (\n          <FriendListItem {...friend} key={friend.id} />\n        ))}\n      </ul>\n    </WrapperFriendList>\n  );\n};\nexport default FriendList;\n\nFriendList.propTypes = {\n  friend: PropTypes.arrayOf(PropTypes.object),\n};","import styled from 'styled-components';\n\nconst WrapperTransactionHistory = styled.section`\n  padding: 30px 0;\n  .transaction-history {\n    margin: 0 auto;\n    border-collapse: collapse;\n    border-radius: 5px;\n    box-shadow: 4px 4px 19px 4px rgba(58, 42, 69, 0.2);\n    overflow: hidden;\n  }\n  .thead {\n    background-color: rgb(38, 174, 149, 0.65);\n    color: #ffffff;\n  }\n  .thead th {\n    padding: 10px 15px;\n    width: 200px;\n    text-align: center;\n    text-transform: uppercase;\n  }\n  .thead th:not(:last-child) {\n    border-right: 1px solid #f2f7f8;\n  }\n  .tbody {\n    font-size: 14px;\n  }\n  .tbody tr {\n    color: #164a45;\n    background-color: #ffffff;\n    transition: background-color 50ms linear, color 50ms linear;\n    &:hover {\n      background-color: #2e756e;\n      color: #ffffff;\n    }\n  }\n  .tbody tr:nth-child(2n) {\n    background-color: #f3f0f8;\n    transition: background-color 50ms linear, color 50ms linear;\n    &:hover {\n      background-color: #2e756e;\n      color: #ffffff;\n    }\n  }\n  .tbody td {\n    padding: 10px 15px;\n    text-align: center;\n  }\n  .tbody td:not(:last-child) {\n    border-right: 1px solid #f2f7f8;\n  }\n`;\nexport default WrapperTransactionHistory;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport WrapperTransactionHistory from './styledTransactionHistory';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <WrapperTransactionHistory>\n      <table className=\"transaction-history\">\n        <thead className=\"thead\">\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody className=\"tbody\">\n          {items.map(item => (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </WrapperTransactionHistory>\n  );\n};\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};","import user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nconst data = { user, statisticalData, friends, transactions };\n\nexport default data;","import React from 'react';\n\nimport Profile from './profile/Profile';\nimport Statistics from './statistics/Statistics';\nimport FriendList from './friendList/FriendList';\nimport TransactionHistory from './transactionHistory/TransactionHistory';\n\nimport data from '../data';\n\nconst App = () => {\n  return (\n    <>\n      <Profile {...data.user} />\n      <Statistics title=\"Upload stats\" stats={data.statisticalData} />\n      <Statistics stats={data.statisticalData} />\n      <FriendList friends={data.friends} />\n      <TransactionHistory items={data.transactions} />\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}